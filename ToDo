CODING

==================================
ISSUES FOUND BY GENTOO FORUM USERS
==================================

*
	DURING ALL THE WORK:
	https://developer.gnome.org/programming-guidelines/stable/c-coding-style.html.en
1 CLOSED RESOLVED
	should not declare a non-static function in a source file
		see NOTE 2
2 CLOSED RESOLVED
	use __FILE__ and/or __LINE__ in openlog
		see NOTE 2
3
	move the code inside if(volume) and if(mount)
	fixed in the GDH-Gentoo's code -- for volumes
4
	strstr will suppress /home/me/variables too, not only /var
5
	volume = _g_unix_volume_new could leak the underlying object whenever the new code suppresses adding it to the list
	fixed in the GDH-Gentoo's code -- stub
6 CLOSED RESOLVED
	don't need to use a memset then strcat -- just use strcpy
	look at the printf family of functions
	syslog functions take a 'printf'-style format string
	?: in one syslog instead of two syslogs
	fixed in the GDH-Gentoo's code -- for volumes
		see NOTE 2
7
	const pointer to const char
8
	declare the loop counters in the for loops
	fixed in the GDH-Gentoo's code -- for volumes
9
	move declarations of objects with automatic storage duration close to the the first place they are used
	fixed in the GDH-Gentoo's code -- for volumes
10
	replace the hardcoded lists with reading a text file - the same /etc/fstab or other
11
	what could be moved to separate functions
12
	at the end again:
	https://developer.gnome.org/programming-guidelines/stable/c-coding-style.html.en
	
======================
ISSUES FOUND BY MY OWN
======================

13 CLOSED RESOLVED
	volume_name = g_volume_get_name (volume)
	sometimes leads to compile error
	expected GVolume aka struct _GVolume but argument is of type GUnixVolume aka struct _GUnixVolume
	was not found earlier because arises _sometimes_

DEBUGGING

1
	try gdb
2
	try valgrind

NOTES

1
	135 lines /13 issues = 10,38 lines per issue.
	o_O
2
	syslog is not used in glib logging
	https://blog.gtk.org/2017/05/04/logging-and-more/
g_log_structured (G_LOG_DOMAIN,
                  G_LOG_LEVEL_DEBUG,
                  "CODE_FILE", "mysource.c",
                  "CODE_LINE", 312,
                  "MESSSAGE_ID", "06d4df59e6c24647bfe69d2c27ef0b4e",
                  "MESSAGE", "You have %d eggs", 12 + 2);
	you can still use printf-style formatting for the MESSAGE field
